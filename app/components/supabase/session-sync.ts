import { getOrCreateClient } from './client';

/**
 * Sincroniza a sess√£o do Supabase entre servidor e cliente.
 * 
 * Este m√≥dulo deve ser chamado no carregamento da aplica√ß√£o
 * para garantir que a sess√£o do usu√°rio seja reconhecida corretamente
 * tanto no servidor quanto no cliente.
 */

/**
 * Atualiza a sess√£o no cliente Supabase.
 * Deve ser chamado no carregamento da aplica√ß√£o.
 */
export async function syncSupabaseSession() {
  try {
    console.log('üîÑ Sincronizando sess√£o Supabase...');
    const supabase = getOrCreateClient();
    
    // Obter sess√£o atual
    const { data, error } = await supabase.auth.getSession();
    
    if (error) {
      console.error('‚ùå Erro ao obter sess√£o:', error.message);
      return { success: false, error };
    }
    
    if (data.session) {
      console.log('‚úÖ Sess√£o Supabase encontrada e sincronizada');
      return { success: true, session: data.session };
    } else {
      console.log('‚ÑπÔ∏è Nenhuma sess√£o Supabase ativa encontrada');
      return { success: true, session: null };
    }
  } catch (error) {
    console.error('üí• Erro inesperado ao sincronizar sess√£o:', error);
    return { success: false, error };
  }
}

/**
 * Verifica se o cliente est√° autenticado.
 * Retorna o usu√°rio se estiver autenticado, null caso contr√°rio.
 */
export async function checkClientAuth() {
  try {
    const supabase = getOrCreateClient();
    const { data, error } = await supabase.auth.getUser();
    
    if (error) {
      console.error('‚ùå Erro ao verificar autentica√ß√£o do cliente:', error.message);
      return null;
    }
    
    return data.user;
  } catch (error) {
    console.error('üí• Erro inesperado ao verificar autentica√ß√£o:', error);
    return null;
  }
}

/**
 * For√ßa a atualiza√ß√£o da sess√£o usando o refreshToken se dispon√≠vel.
 * √ötil quando a sess√£o parece ter expirado mas o refreshToken ainda √© v√°lido.
 */
export async function refreshSession() {
  try {
    const supabase = getOrCreateClient();
    const { data, error } = await supabase.auth.refreshSession();
    
    if (error) {
      console.error('‚ùå Erro ao atualizar sess√£o:', error.message);
      return { success: false, error };
    }
    
    if (data.session) {
      console.log('‚úÖ Sess√£o atualizada com sucesso');
      return { success: true, session: data.session };
    } else {
      console.log('‚ö†Ô∏è N√£o foi poss√≠vel atualizar a sess√£o');
      return { success: false, session: null };
    }
  } catch (error) {
    console.error('üí• Erro inesperado ao atualizar sess√£o:', error);
    return { success: false, error };
  }
} 